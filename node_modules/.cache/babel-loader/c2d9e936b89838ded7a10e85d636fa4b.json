{"ast":null,"code":"var _jsxFileName = \"/Users/rd/Desktop/JS/olivierEsuka/myPojects/covid-19/covid_19/src/util.js\";\nimport React from 'react';\nimport numeral from 'numeral';\nimport { Circle, Popup } from 'react-leaflet';\nconst casesTypeColors = {\n  cases: {\n    hex: '#CC1034',\n    rgb: 'rgb(204, 16, 52)',\n    half_op: 'rgba(204, 16, 52, 0.5)',\n    multiplier: 800\n  },\n  recovered: {\n    hex: '#7dd71d',\n    rgb: 'rgb(125, 215, 29)',\n    half_op: 'rgba(125, 215, 29, 0.5)',\n    multiplier: 1200\n  },\n  deaths: {\n    hex: '#fb4443',\n    rgb: 'rgb(251, 68, 67)',\n    half_op: 'rgba(251, 68, 67, 0.5)',\n    multiplier: 2000\n  }\n};\nexport const sortDate = data => {\n  const sortedData = [...data]; //1 stand for true and -1 stand for false\n\n  return sortedData.sort((a, b) => a.cases > b.cases ? -1 : 1);\n};\nexport const prettyPrintStat = stat => stat ? `+${numeral(stat).format('0,0a')}` : '+0'; //drow cirlce on the map, with atractive tooltip\n\nexport const showDataOnMap = (data, casesType = 'cases') => data.map(country => /*#__PURE__*/React.createElement(Circle, {\n  key: country.country,\n  center: [country.countryInfo.lat, country.countryInfo.long],\n  color: casesTypeColors[casesType].hex,\n  fillColor: casesTypeColors[casesType].hex,\n  fillOpacity: 0.4,\n  radius: Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Popup, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"info-container\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"info-flag\",\n  style: {\n    backgroundImage: `url(${country.countryInfo.flag})`\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 11\n  }\n}), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"info-name\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 11\n  }\n}, country.country), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"info-cases\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 11\n  }\n}, \"Cases \", numeral(country.cases).format('0,0')), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"info-recovered\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 11\n  }\n}, \"Recovered \", country.recovered), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"info-deaths\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 11\n  }\n}, \"Deaths \", country.deaths)))));","map":{"version":3,"sources":["/Users/rd/Desktop/JS/olivierEsuka/myPojects/covid-19/covid_19/src/util.js"],"names":["React","numeral","Circle","Popup","casesTypeColors","cases","hex","rgb","half_op","multiplier","recovered","deaths","sortDate","data","sortedData","sort","a","b","prettyPrintStat","stat","format","showDataOnMap","casesType","map","country","countryInfo","lat","long","Math","sqrt","backgroundImage","flag"],"mappings":"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","sourcesContent":["import React from 'react'\nimport numeral from 'numeral'\nimport {Circle, Popup} from 'react-leaflet'\n\nconst casesTypeColors = {\n  cases: {\n    hex: '#CC1034',\n    rgb: 'rgb(204, 16, 52)',\n    half_op: 'rgba(204, 16, 52, 0.5)',\n    multiplier: 800,\n  },\n  recovered: {\n    hex: '#7dd71d',\n    rgb: 'rgb(125, 215, 29)',\n    half_op: 'rgba(125, 215, 29, 0.5)',\n    multiplier: 1200,\n  },\n  deaths: {\n    hex: '#fb4443',\n    rgb: 'rgb(251, 68, 67)',\n    half_op: 'rgba(251, 68, 67, 0.5)',\n    multiplier: 2000,\n  },\n}\n\nexport const sortDate = data => {\n  const sortedData = [...data]\n  //1 stand for true and -1 stand for false\n  return sortedData.sort((a, b) => (a.cases > b.cases ? -1 : 1))\n}\n\nexport const prettyPrintStat = stat => (stat ? `+${numeral(stat).format('0,0a')}` : '+0')\n\n//drow cirlce on the map, with atractive tooltip\nexport const showDataOnMap = (data, casesType = 'cases') =>\n  data.map(country => (\n    <Circle\n      key={country.country}\n      center={[country.countryInfo.lat, country.countryInfo.long]}\n      color={casesTypeColors[casesType].hex}\n      fillColor={casesTypeColors[casesType].hex}\n      fillOpacity={0.4}\n      radius={Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier}\n    >\n      <Popup>\n        <div className='info-container'>\n          <div\n            className='info-flag'\n            style={{backgroundImage: `url(${country.countryInfo.flag})`}}\n          ></div>\n          <div className='info-name'>{country.country}</div>\n          <div className='info-cases'>Cases {numeral(country.cases).format('0,0')}</div>\n          <div className='info-recovered'>Recovered {country.recovered}</div>\n          <div className='info-deaths'>Deaths {country.deaths}</div>\n        </div>\n      </Popup>\n    </Circle>\n  ))\n"]},"metadata":{},"sourceType":"module"}