{"ast":null,"code":"var _jsxFileName = \"/Users/rd/Desktop/JS/olivierEsuka/myPojects/covid-19/covid_19/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { MenuItem, FormControl, Select, Card, CardContent } from \"@material-ui/core\";\nimport InfoBox from \"./InfoBox\";\nimport Map from \"./Map\";\nimport Table from './Table';\nimport { sortData } from './util';\nimport LineGraph from \"./LineGraph\";\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n  useEffect(() => {\n    fetch('https://disease.sh/v3/covid-19/all').then(response => response.json()).then(data => {\n      setCountryInfo(data);\n    });\n  }, []);\n  useEffect(() => {\n    // the code inside here will run once\n    // when the component loads and not again after\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()).then(data => {\n        const countries = data.map(country => ({\n          name: country.country,\n          // rwanda, burundu\n          value: country.countryInfo.iso2 // rw, us, ug\n\n        }));\n        const sortedData = sortData(data);\n        setCountries(countries);\n        setTableData(sortedData);\n      });\n    };\n\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async e => {\n    const countryCode = e.target.value;\n    const url = countryCode === \"worldwide\" ? 'https://disease.sh/v3/covid-19/all' : `https://disease.sh/v3/covid-19/countries/${countryCode}`; //>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>https://disease.sh/v3/chttps://disease.sh/v3/covid-19/countriesovid-19/countries/[Country_Code]\n\n    await fetch(url).then(response => response.json()).then(data => {\n      setCountry(countryCode); // All of the data...\n      // from the country response\n\n      setCountryInfo(data);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"COVID-19 TRACKER\"), /*#__PURE__*/React.createElement(FormControl, {\n    className: \"app__dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    variant: \"outlined\",\n    value: country,\n    onChange: onCountryChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"worldwide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, \"worldwide\"), countries.map(country => /*#__PURE__*/React.createElement(MenuItem, {\n    value: country.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, country.name))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__stats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"CoronaVirus cases\",\n    total: countryInfo.cases,\n    cases: countryInfo.todayCases,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"Recovered\",\n    total: countryInfo.recovered,\n    cases: countryInfo.todayRecovered,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"Deaths\",\n    total: countryInfo.deaths,\n    cases: countryInfo.todayDeaths,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Map, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Card, {\n    className: \"app__right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, \"Live Case by Country\"), /*#__PURE__*/React.createElement(Table, {\n    countries: tableData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, \"worldwide new case \", casesType), /*#__PURE__*/React.createElement(LineGraph, {\n    casesType: casesType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }), console.log(casesType))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/rd/Desktop/JS/olivierEsuka/myPojects/covid-19/covid_19/src/App.js"],"names":["React","useState","useEffect","MenuItem","FormControl","Select","Card","CardContent","InfoBox","Map","Table","sortData","LineGraph","App","countries","setCountries","country","setCountry","countryInfo","setCountryInfo","tableData","setTableData","casesType","setCasesType","fetch","then","response","json","data","getCountriesData","map","name","value","iso2","sortedData","onCountryChange","e","countryCode","target","url","cases","todayCases","recovered","todayRecovered","deaths","todayDeaths","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { MenuItem, FormControl, Select, Card, CardContent } from \"@material-ui/core\";\nimport InfoBox from \"./InfoBox\";\nimport Map from \"./Map\";\nimport Table from './Table';\nimport { sortData} from './util';\nimport LineGraph from \"./LineGraph\";\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n\n  useEffect(() => {\n    fetch('https://disease.sh/v3/covid-19/all')\n    .then(response => response.json())\n    .then(data => {\n      setCountryInfo(data)\n    });\n  }, []);\n\n  useEffect(() => {\n    // the code inside here will run once\n    // when the component loads and not again after\n\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country, // rwanda, burundu\n            value: country.countryInfo.iso2, // rw, us, ug\n          }));\n\n          const sortedData = sortData(data);\n          setCountries(countries);\n          setTableData(sortedData);\n        });\n    };\n\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async (e) => {\n    const countryCode = e.target.value;\n\n    const url = countryCode ===\"worldwide\" \n    ? 'https://disease.sh/v3/covid-19/all' \n    : `https://disease.sh/v3/covid-19/countries/${countryCode}`\n    //>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>https://disease.sh/v3/chttps://disease.sh/v3/covid-19/countriesovid-19/countries/[Country_Code]\n\n    await fetch(url)\n    .then(response => response.json())\n    .then(data => {\n      setCountry(countryCode)\n\n      // All of the data...\n      // from the country response\n      setCountryInfo(data);\n\n    })\n\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1>COVID-19 TRACKER</h1>\n          <FormControl className=\"app__dropdown\">\n            <Select\n              variant=\"outlined\"\n              value={country}\n              onChange={onCountryChange}\n            >\n              <MenuItem value=\"worldwide\">worldwide</MenuItem>\n              {countries.map((country) => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        {/* header */}\n        {/* Title + select input ropdown field */}\n\n        <div className=\"app__stats\">\n          {/* InfoBoxe1 */}\n\n          <InfoBox title=\"CoronaVirus cases\" total={countryInfo.cases} cases={countryInfo.todayCases} />\n\n          {/* InfoBoxe2 */}\n\n          <InfoBox title=\"Recovered\" total={countryInfo.recovered} cases={countryInfo.todayRecovered} />\n\n          {/* InfoBoxe3 */}\n\n          <InfoBox title=\"Deaths\" total={countryInfo.deaths} cases={countryInfo.todayDeaths} />\n        </div>\n\n        {/* Table */}\n        {/* Graph */}\n\n        {/* Map */}\n        <Map />\n      </div>\n      <Card className=\"app__right\">\n        <CardContent>\n          <h3>Live Case by Country</h3>\n        {/* Table */}\n\n                <Table countries={tableData}/>\n\n        <h3>worldwide new case {casesType}</h3>\n        <LineGraph  casesType={casesType}/>\n        {console.log(casesType)}\n        {/* graph */}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}