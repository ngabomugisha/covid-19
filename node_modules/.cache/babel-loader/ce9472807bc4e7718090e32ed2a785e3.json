{"ast":null,"code":"var _jsxFileName = \"/Users/rd/Desktop/JS/olivierEsuka/myPojects/covid-19/covid_19/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { FormControl, Select, MenuItem, Card, CardContent } from '@material-ui/core';\nimport './App.css';\nimport InfoBox from './components/InfoBox';\nimport Map from './components/Map';\nimport Table from './components/Table';\nimport { sortDate } from './util';\nimport LineGraph from './components/LineGraph';\n\nfunction App() {\n  //fill drob down wit the all country\n  const [countries, setCountries] = useState([]); //select single country\n\n  const [country, setCountry] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [casesType, setCasesType] = useState('cases');\n  const [mapzomm, setMapzomm] = useState(3);\n  const [mapCenter, setMapCenter] = useState({\n    lat: 34.80746,\n    lng: -40.4796\n  });\n  const [mapCountries, setMapCountries] = useState([]); //get alll country data\n\n  useEffect(() => {\n    const getCountriesDate = async () => {\n      await fetch('https://disease.sh/v3/covid-19/countries').then(resp => resp.json()).then(data => {\n        const countries = data.map(country => ({\n          name: country.country,\n          value: country.countryInfo.iso3\n        }));\n        setCountries(countries);\n        setTableData(sortDate(data));\n        setMapCountries(data);\n      });\n    };\n\n    getCountriesDate();\n  }, []); //get all the worl information\n\n  useEffect(() => {\n    const getCountriesDate = async () => {\n      await fetch('https://disease.sh/v3/covid-19/all').then(resp => resp.json()).then(data => setCountryInfo(data));\n    };\n\n    getCountriesDate();\n  }, []); //select counrty from dropdown\n\n  const onCountryChange = async e => {\n    const counrtyCode = e.target.value; //decide to use which link\n\n    const url = counrtyCode === 'worldwide' ? 'https://disease.sh/v3/covid-19/all' : `https://disease.sh/v3/covid-19/countries/${counrtyCode}`;\n    await fetch(url).then(resp => resp.json()).then(data => {\n      setCountry(counrtyCode);\n      setCountryInfo(data);\n\n      if (counrtyCode === 'worldwide') {\n        setMapCenter({\n          lat: 34.80746,\n          lng: -40.4796\n        });\n        setMapzomm(3);\n      } else {\n        setMapCenter({\n          lat: data.countryInfo.lat,\n          lng: data.countryInfo.long\n        });\n        setMapzomm(3);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, \"COVID-19 TRACKER\"), /*#__PURE__*/React.createElement(FormControl, {\n    className: \"app__dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    variant: \"outlined\",\n    value: country,\n    onChange: onCountryChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"worldwide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, \"WorldWide\"), countries.map(country => /*#__PURE__*/React.createElement(MenuItem, {\n    key: country.name,\n    value: country.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, country.name))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__stats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InfoBox, {\n    isRed: true,\n    active: casesType === 'cases',\n    handleClick: e => setCasesType('cases'),\n    cases: countryInfo.todayCases,\n    total: countryInfo.cases,\n    title: \"Coronavirus Cases\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(InfoBox, {\n    active: casesType === 'recovered',\n    handleClick: e => setCasesType('recovered'),\n    cases: countryInfo.todayRecovered,\n    total: countryInfo.recovered,\n    title: \"Recovered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(InfoBox, {\n    isRed: true,\n    active: casesType === 'deaths',\n    handleClick: e => setCasesType('deaths'),\n    cases: countryInfo.todayDeaths,\n    total: countryInfo.deaths,\n    title: \"Deaths\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Map, {\n    center: mapCenter,\n    zoom: mapzomm,\n    countries: mapCountries,\n    casesType: casesType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Card, {\n    className: \"app__right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, \"Live cases by Country\"), /*#__PURE__*/React.createElement(Table, {\n    countries: tableData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"app__graphTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, \"Worldwide new \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"app__casesType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 27\n    }\n  }, casesType)), /*#__PURE__*/React.createElement(LineGraph, {\n    caseType: casesType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/rd/Desktop/JS/olivierEsuka/myPojects/covid-19/covid_19/src/App.js"],"names":["React","useState","useEffect","FormControl","Select","MenuItem","Card","CardContent","InfoBox","Map","Table","sortDate","LineGraph","App","countries","setCountries","country","setCountry","countryInfo","setCountryInfo","tableData","setTableData","casesType","setCasesType","mapzomm","setMapzomm","mapCenter","setMapCenter","lat","lng","mapCountries","setMapCountries","getCountriesDate","fetch","then","resp","json","data","map","name","value","iso3","onCountryChange","e","counrtyCode","target","url","long","todayCases","cases","todayRecovered","recovered","todayDeaths","deaths"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {FormControl, Select, MenuItem, Card, CardContent} from '@material-ui/core'\nimport './App.css'\nimport InfoBox from './components/InfoBox'\nimport Map from './components/Map'\nimport Table from './components/Table'\nimport {sortDate} from './util'\nimport LineGraph from './components/LineGraph'\n\nfunction App() {\n  //fill drob down wit the all country\n  const [countries, setCountries] = useState([])\n  //select single country\n  const [country, setCountry] = useState('worldwide')\n  const [countryInfo, setCountryInfo] = useState({})\n  const [tableData, setTableData] = useState([])\n  const [casesType, setCasesType] = useState('cases')\n  const [mapzomm, setMapzomm] = useState(3)\n  const [mapCenter, setMapCenter] = useState({lat: 34.80746, lng: -40.4796})\n  const [mapCountries, setMapCountries] = useState([])\n\n  //get alll country data\n  useEffect(() => {\n    const getCountriesDate = async () => {\n      await fetch('https://disease.sh/v3/covid-19/countries')\n        .then(resp => resp.json())\n        .then(data => {\n          const countries = data.map(country => ({\n            name: country.country,\n            value: country.countryInfo.iso3,\n          }))\n          setCountries(countries)\n          setTableData(sortDate(data))\n          setMapCountries(data)\n        })\n    }\n    getCountriesDate()\n  }, [])\n\n  //get all the worl information\n  useEffect(() => {\n    const getCountriesDate = async () => {\n      await fetch('https://disease.sh/v3/covid-19/all')\n        .then(resp => resp.json())\n        .then(data => setCountryInfo(data))\n    }\n    getCountriesDate()\n  }, [])\n\n  //select counrty from dropdown\n  const onCountryChange = async e => {\n    const counrtyCode = e.target.value\n    //decide to use which link\n    const url =\n      counrtyCode === 'worldwide'\n        ? 'https://disease.sh/v3/covid-19/all'\n        : `https://disease.sh/v3/covid-19/countries/${counrtyCode}`\n\n    await fetch(url)\n      .then(resp => resp.json())\n      .then(data => {\n        setCountry(counrtyCode)\n        setCountryInfo(data)\n        if (counrtyCode === 'worldwide') {\n          setMapCenter({lat: 34.80746, lng: -40.4796})\n          setMapzomm(3)\n        } else {\n          setMapCenter({lat: data.countryInfo.lat, lng: data.countryInfo.long})\n          setMapzomm(3)\n        }\n      })\n  }\n\n  return (\n    <div className='app'>\n      <div className='app__left'>\n        <div className='app__header'>\n          <h1>COVID-19 TRACKER</h1>\n          <FormControl className='app__dropdown'>\n            <Select variant='outlined' value={country} onChange={onCountryChange}>\n              <MenuItem value='worldwide'>WorldWide</MenuItem>\n              {countries.map(country => (\n                <MenuItem key={country.name} value={country.value}>\n                  {country.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n\n        <div className='app__stats'>\n          <InfoBox\n            isRed\n            active={casesType === 'cases'}\n            handleClick={e => setCasesType('cases')}\n            cases={countryInfo.todayCases}\n            total={countryInfo.cases}\n            title='Coronavirus Cases'\n          />\n          <InfoBox\n            active={casesType === 'recovered'}\n            handleClick={e => setCasesType('recovered')}\n            cases={countryInfo.todayRecovered}\n            total={countryInfo.recovered}\n            title='Recovered'\n          />\n          <InfoBox\n            isRed\n            active={casesType === 'deaths'}\n            handleClick={e => setCasesType('deaths')}\n            cases={countryInfo.todayDeaths}\n            total={countryInfo.deaths}\n            title='Deaths'\n          />\n        </div>\n        <Map center={mapCenter} zoom={mapzomm} countries={mapCountries} casesType={casesType} />\n      </div>\n\n      <Card className='app__right'>\n        <CardContent>\n          <h3>Live cases by Country</h3>\n          <Table countries={tableData} />\n          <h3 className='app__graphTitle'>\n            Worldwide new <span className='app__casesType'>{casesType}</span>\n          </h3>\n          {/* graph  */}\n          <LineGraph caseType={casesType} />\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}