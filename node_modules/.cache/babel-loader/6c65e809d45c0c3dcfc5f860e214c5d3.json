{"ast":null,"code":"var _jsxFileName = \"/Users/rd/Desktop/JS/olivierEsuka/myPojects/covid-19/src/components/LineGraph.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport numeral from 'numeral'; //used for Linegraph\n\nconst options = {\n  legend: {\n    display: false\n  },\n  elements: {\n    point: {\n      radius: 0\n    }\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: 'index',\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format('+0,0');\n      }\n    }\n  },\n  scales: {\n    xAxes: [{\n      type: 'time',\n      time: {\n        format: 'MM/DD/YY',\n        tooltipFormat: 'll'\n      }\n    }],\n    yAxes: [{\n      gridLines: {\n        display: false\n      },\n      ticks: {\n        // Include a dollar sign in the ticks\n        callback: function (value) {\n          return numeral(value).format('0a');\n        }\n      }\n    }]\n  }\n};\n\nfunction LineGraph({\n  caseType = 'cases'\n}) {\n  const [data, setData] = useState({});\n  useEffect(() => {\n    fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120').then(resp => resp.json()).then(data => {\n      const chartDate = buildChartData(data, caseType);\n      setData(chartDate);\n    });\n  }, [caseType]);\n\n  const buildChartData = (data, caseType) => {\n    const chartDate = [];\n    let lastDataPoint; //this date is like 6/16/20\n\n    for (let date in data[caseType]) {\n      if (lastDataPoint) {\n        let newDataPoin = {\n          x: date,\n          y: data[caseType][date] - lastDataPoint\n        };\n        chartDate.push(newDataPoin);\n      }\n\n      lastDataPoint = data[caseType][date];\n    }\n\n    return chartDate;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"lineGraph\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, (data === null || data === void 0 ? void 0 : data.length) > 0 && /*#__PURE__*/React.createElement(Line, {\n    data: {\n      datasets: [{\n        backgroundColor: 'rgba(204, 16, 52, 0.5)',\n        borderColor: '#CC1034',\n        data: data\n      }]\n    },\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default LineGraph;","map":{"version":3,"sources":["/Users/rd/Desktop/JS/olivierEsuka/myPojects/covid-19/src/components/LineGraph.jsx"],"names":["React","useEffect","useState","Line","numeral","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","LineGraph","caseType","setData","fetch","then","resp","json","chartDate","buildChartData","lastDataPoint","date","newDataPoin","x","y","push","length","datasets","backgroundColor","borderColor"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {Line} from 'react-chartjs-2'\nimport numeral from 'numeral'\n\n//used for Linegraph\nconst options = {\n  legend: {\n    display: false,\n  },\n  elements: {\n    point: {\n      radius: 0,\n    },\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: 'index',\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format('+0,0')\n      },\n    },\n  },\n  scales: {\n    xAxes: [\n      {\n        type: 'time',\n        time: {\n          format: 'MM/DD/YY',\n          tooltipFormat: 'll',\n        },\n      },\n    ],\n    yAxes: [\n      {\n        gridLines: {\n          display: false,\n        },\n        ticks: {\n          // Include a dollar sign in the ticks\n          callback: function (value) {\n            return numeral(value).format('0a')\n          },\n        },\n      },\n    ],\n  },\n}\n\nfunction LineGraph({caseType = 'cases'}) {\n  const [data, setData] = useState({})\n\n  useEffect(() => {\n    fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120')\n      .then(resp => resp.json())\n      .then(data => {\n        const chartDate = buildChartData(data, caseType)\n        setData(chartDate)\n      })\n  }, [caseType])\n\n  const buildChartData = (data, caseType) => {\n    const chartDate = []\n    let lastDataPoint\n    //this date is like 6/16/20\n    for (let date in data[caseType]) {\n      if (lastDataPoint) {\n        let newDataPoin = {\n          x: date,\n          y: data[caseType][date] - lastDataPoint,\n        }\n        chartDate.push(newDataPoin)\n      }\n      lastDataPoint = data[caseType][date]\n    }\n    return chartDate\n  }\n\n  return (\n    <div className='lineGraph'>\n      {data?.length > 0 && (\n        <Line\n          data={{\n            datasets: [\n              {\n                backgroundColor: 'rgba(204, 16, 52, 0.5)',\n                borderColor: '#CC1034',\n                data: data,\n              },\n            ],\n          }}\n          options={options}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default LineGraph\n"]},"metadata":{},"sourceType":"module"}